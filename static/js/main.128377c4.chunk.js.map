{"version":3,"sources":["panels/Home.js","panels/Additional.js","panels/DonationIcon.js","panels/TargetDonation.js","panels/CollectionType.js","panels/MyProgress.js","panels/Preview.js","panels/RegularDonation.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","action","size","onClick","data-to","stretched","Additional","donation","left","className","top","value","first_name","last_name","name","type","defaultValue","vertical","style","margin","DonationIcon","props","state","file","handleChange","bind","event","this","setDonation","setState","URL","createObjectURL","target","files","src","alt","accept","mode","before","controlSize","onChange","React","Component","TargetDonation","sum","description","separator","placeholder","e","disabled","CollectionType","centered","width","padding","after","MyProgress","useState","text","setText","progressValue","setProgressValue","currentAmount","setCurrentAmount","header","indicator","console","info","Number","parseInt","Preview","back","weight","RegularDonation","App","activePanel","setActivePanel","setUser","popout","setPopout","useEffect","a","bridge","send","user","subscribe","detail","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.128377c4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Placeholder from \"@vkontakte/vkui/dist/components/Placeholder/Placeholder\";\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Пожертвования</PanelHeader>\n\t\t<Placeholder\n\t\t\taction={<Button size=\"l\" onClick={go} data-to=\"ctype\">Создать сбор</Button>}\n\t\t\tstretched\n\t\t>\n\t\t\t    У вас пока нет сборов. <br />\n\t\t\t\tНачните доброе дело.\n\t\t</Placeholder>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport {PanelHeaderBack} from '@vkontakte/vkui';\nimport Select from \"@vkontakte/vkui/dist/components/Select/Select\";\nimport FormLayout from \"@vkontakte/vkui/dist/components/FormLayout/FormLayout\";\nimport FormLayoutGroup from \"@vkontakte/vkui/dist/components/FormLayoutGroup/FormLayoutGroup\";\nimport Radio from \"@vkontakte/vkui/dist/components/Radio/Radio\";\nimport Input from \"@vkontakte/vkui/dist/components/Input/Input\";\nimport FixedLayout from \"@vkontakte/vkui/dist/components/FixedLayout/FixedLayout\";\nimport Separator from \"@vkontakte/vkui/dist/components/Separator/Separator\";\nimport SimpleCell from \"@vkontakte/vkui/dist/components/SimpleCell/SimpleCell\";\n\nconst Additional = ({id, go, fetchedUser, donation}) => (\n    <Panel id={id}>\n        <PanelHeader left={<PanelHeaderBack onClick={go} data-to=\"targetDonation\"/>}\n                     className='panel'>\n            Дополнительно\n        </PanelHeader>\n\n        <FormLayout>\n            <Select top=\"Автор\">\n                <option value=\"m\">{fetchedUser.first_name} {fetchedUser.last_name}</option>\n                <option value=\"f\">Мое любимое сообщество</option>\n            </Select>\n\n            <FormLayoutGroup top=\"Сбор завершится\">\n                <Radio name=\"type\">Когда соберём сумму</Radio>\n                <Radio name=\"type\">В определённую дату</Radio>\n            </FormLayoutGroup>\n\n            <FormLayoutGroup top=\"Дата окончания\">\n                <Input type=\"date\" defaultValue=\"Выберите дату\"/>\n            </FormLayoutGroup>\n            <FixedLayout vertical=\"bottom\">\n                <Button size=\"xl\" onClick={go} data-to=\"preview\">Создать сбор</Button>\n                <Separator style={{margin: '12px 0'}}/>\n            </FixedLayout>\n        </FormLayout>\n    </Panel>\n);\n\nAdditional.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n    donation: PropTypes.shape({\n        name: PropTypes.string,\n        sum: PropTypes.string,\n        target: PropTypes.string,\n        description: PropTypes.string,\n        file: PropTypes.string\n    }),\n};\n\nexport default Additional;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {File} from '@vkontakte/vkui';\nimport {View, Panel,} from '@vkontakte/vkui';\nimport Icon56GalleryOutline from \"@vkontakte/icons/dist/56/gallery_outline\";\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\nimport CellButton from \"@vkontakte/vkui/dist/components/CellButton/CellButton\";\nimport Icon24DismissOverlay from '@vkontakte/icons/dist/24/dismiss_overlay';\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\nimport Banner from \"@vkontakte/vkui/dist/components/Banner/Banner\";\nimport TargetDonation from \"./TargetDonation\";\n\nclass DonationIcon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            file: null\n        }\n        this.handleChange = this.handleChange.bind(this)\n    }\n\n    handleChange(event) {\n        const {donation, setDonation} = this.props;\n        this.setState({\n            file: URL.createObjectURL(event.target.files[0])\n        })\n        donation.file = this.state.file\n        setDonation(donation)\n    }\n\n    render()\n    {\n        if (this.state.file) {\n            return (\n                <Div>\n                    <Icon24DismissOverlay className=\"dismiss\"\n                                       onClick={() => this.setState({file: null})}/>\n                    <img src={this.state.file}\n                         alt='HTML5'\n                         className=\"wrapper\"\n                    />\n                </Div>\n            )\n        } else {\n            return (\n                <File\n                    accept=\"image/*\"\n                    className=\"uploader\"\n                    mode=\"secondary\"\n                    before={<Icon56GalleryOutline/>}\n                    controlSize=\"xl\"\n                    onChange={this.handleChange}\n                >\n                    Загрузить обложку\n                </File>\n            )\n        }\n    }\n}\n\nDonationIcon.propTypes = {\n    donation: PropTypes.shape({\n        name: PropTypes.string,\n        sum: PropTypes.string,\n        target: PropTypes.string,\n        description: PropTypes.string,\n        file: PropTypes.string\n    })\n}\n\nexport default DonationIcon\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport {PanelHeaderBack} from '@vkontakte/vkui';\nimport {FormLayout, Input, Select, Textarea, File} from '@vkontakte/vkui';\nimport Banner from \"@vkontakte/vkui/dist/components/Banner/Banner\";\nimport Icon56GalleryOutline from '@vkontakte/icons/dist/56/gallery_outline';\nimport DonationIcon from \"./DonationIcon\";\n\nclass TargetDonation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sum: '',\n            name: '',\n            description: '',\n            target: ''\n        };\n    }\n\n    render() {\n        const {id, go, fetchedUser, donation, setDonation} = this.props;\n        return (\n            <Panel id={id}>\n                <PanelHeader\n                    separator={false}\n                    left={<PanelHeaderBack onClick={go} data-to=\"ctype\"/>}\n                >\n                    Целевой сбор\n                </PanelHeader>\n                <FormLayout>\n\n                    <DonationIcon donation={donation} setDonation={setDonation}/>\n\n                    <Input\n                        type=\"name\"\n                        top=\"Название сбора\"\n                        placeholder=\"Название сбора\"\n                        onChange={(e) => {\n                            this.setState({name: e.target.value});\n                        }}\n                    />\n\n                    <Input\n                        type=\"number\"\n                        top=\"Сумма, ₽\"\n                        placeholder=\"Сколько нужно собрать?\"\n                        onChange={(e) => {\n                            this.setState({sum: e.target.value});\n                        }}\n                    />\n\n                    <Input\n                        type=\"purpose\"\n                        top=\"Цель\"\n                        placeholder=\"Например, лечение человека\"\n                        onChange={(e) => {\n                            this.setState({target: e.target.value});\n                        }}\n                    />\n\n                    <Textarea\n                        top=\"Описание\"\n                        placeholder=\"На что пойдут деньги и как они кому-то помогут?\"\n                        onChange={(e) => {\n                            this.setState({description: e.target.value});\n                        }}\n                    />\n\n                    <Select\n                        top=\"Куда получать деньги\"\n                    >\n                        <option value=\"0\">Счет VK Pay · 1234</option>\n                        <option value=\"1\">Карта · 1337</option>\n                    </Select>\n\n                    <Button\n                        size=\"xl\"\n                        disabled={this.state.name === ''\n                        || this.state.target === ''\n                        || this.state.sum === ''\n                        || this.state.description === ''}\n                        onClick={e => {\n                            donation.name = this.state.name;\n                            donation.target = this.state.target;\n                            donation.description = this.state.description;\n                            donation.sum = this.state.sum;\n                            setDonation(donation);\n                            go(e);\n                        }} data-to=\"additional\"\n                    >\n                        Далее\n                    </Button>\n                </FormLayout>\n            </Panel>\n        );\n    }\n}\n\nTargetDonation.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n    donation: PropTypes.shape({\n        name: PropTypes.string,\n        sum: PropTypes.string,\n        target: PropTypes.string,\n        description: PropTypes.string,\n        file: PropTypes.string\n    })\n};\n\nexport default TargetDonation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, Button, Div, Cell} from '@vkontakte/vkui';\n\nimport Icon28TargetOutline from '@vkontakte/icons/dist/28/target_outline';\nimport Icon28ChevronRightOutline from '@vkontakte/icons/dist/28/chevron_right_outline';\nimport Icon28CalendarOutline from '@vkontakte/icons/dist/28/calendar_outline';\n\nimport SimpleCell from \"@vkontakte/vkui/dist/components/SimpleCell/SimpleCell\";\nimport {PanelHeaderBack} from \"@vkontakte/vkui\";\nimport './styles.css'\n\nconst CollectionType = ({id, go, fetchedUser}) => (\n    <Panel id={id} centered={true}>\n        <PanelHeader left={<PanelHeaderBack onClick={go} data-to=\"home\"/>}>Тип сбора</PanelHeader>\n        <Div style={{width: \"95%\", padding: \"5px\"}}>\n            <SimpleCell className=\"type_button\"\n                        before={<Icon28TargetOutline/>} after={<Icon28ChevronRightOutline/>}\n                        onClick={go} data-to=\"targetDonation\"\n                        description=\"Когда есть определенная цель\">Целевой сбор</SimpleCell>\n            <SimpleCell className=\"type_button\"\n                        before={<Icon28CalendarOutline/>} after={<Icon28ChevronRightOutline/>}\n                        onClick={go} data-to=\"regularDonation\"\n                        description=\"Если помощь нужна ежемесячно\">Регулярный сбор</SimpleCell>\n        </Div>\n    </Panel>\n);\n\nCollectionType.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default CollectionType;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport {Cell, Progress, Group, Div, InfoRow} from \"@vkontakte/vkui\";\n\nconst MyProgress = ({ id, go, donation }) => {\n    const [text, setText] = useState('Помогите первым');\n    const [progressValue, setProgressValue] = useState(0);\n    const [currentAmount, setCurrentAmount] = useState(0)\n\n    return (\n        <Panel id={id}>\n            <Cell before={\n                <Group>\n                    <Div style={{width: \"100%\"}}>\n                        <InfoRow style={{width: \"220px\"}} header={text}>\n                            <Progress value={progressValue}/>\n                        </InfoRow>\n                    </Div>\n                </Group>} indicator={\n                <Button mode=\"outline\" onClick={() => {\n                    setCurrentAmount(currentAmount + 200)\n                    setText(\"Собрано \" + currentAmount + \" ₽ из \" + donation.sum + \" ₽\")\n                    console.info(donation.sum)\n                    setProgressValue(currentAmount * 100 / Number.parseInt(donation.sum))\n                }}>Помочь</Button>}>\n            </Cell>\n        </Panel>\n    );\n};\n\nMyProgress.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    donation: PropTypes.shape({\n        name: PropTypes.string,\n        sum: PropTypes.string,\n        target: PropTypes.string,\n        description: PropTypes.string,\n    })\n};\n\nexport default MyProgress;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Placeholder from \"@vkontakte/vkui/dist/components/Placeholder/Placeholder\";\nimport MyProgress from \"./MyProgress\";\nimport {FormLayout, Group, PanelHeaderBack, Textarea} from \"@vkontakte/vkui\";\nimport DonationIcon from \"./DonationIcon\";\nimport Text from \"@vkontakte/vkui/dist/components/Typography/Text/Text\";\n\n\nclass Preview extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    render() {\n        const {id, go, fetchedUser, donation, back} = this.props;\n        return (\n            <Panel id={id}>\n                <PanelHeader left={<PanelHeaderBack onClick={go} data-to={back}/>}>Предпросмотр</PanelHeader>\n                <FormLayout>\n                    <Textarea placeholder=\"Введите текст\">\n                    </Textarea>\n                    <img src={donation.file}\n                         alt='HTML5'\n                         className=\"wrapper\"\n                    />\n                    <Text weight=\"medium\">{donation.name}</Text>\n                </FormLayout>\n                <MyProgress id={id} go={go} donation={donation}/>\n            </Panel>\n        );\n    }\n}\n\nPreview.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    back: PropTypes.string.isRequired,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n    donation: PropTypes.shape({\n        name: PropTypes.string,\n        sum: PropTypes.string,\n        target: PropTypes.string,\n        description: PropTypes.string,\n        file: PropTypes.string\n    })\n};\n\nexport default Preview;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport {PanelHeaderBack} from '@vkontakte/vkui';\nimport {FormLayout, Input, Select, Textarea, File} from '@vkontakte/vkui';\nimport Banner from \"@vkontakte/vkui/dist/components/Banner/Banner\";\nimport Icon56GalleryOutline from '@vkontakte/icons/dist/56/gallery_outline';\nimport DonationIcon from \"./DonationIcon\";\n\nclass RegularDonation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            sum: '',\n            name: '',\n            description: '',\n            target: ''\n        };\n    }\n\n    render() {\n        const {id, go, fetchedUser, donation, setDonation} = this.props;\n\n        return (<Panel id={id}>\n                <PanelHeader\n                    separator={false}\n                    left={<PanelHeaderBack onClick={go} data-to=\"ctype\"/>}\n                >\n                    Регулярный сбор\n                </PanelHeader>\n                <FormLayout>\n\n                    <DonationIcon donation={donation} setDonation={setDonation}/>\n\n                    <Input\n                        type=\"name\"\n                        top=\"Название сбора\"\n                        placeholder=\"Название сбора\"\n                        onChange={(e) => {\n                            this.setState({name: e.target.value});\n                        }}\n                    />\n\n                    <Input\n                        type=\"number\"\n                        top=\"Сумма, ₽\"\n                        placeholder=\"Сколько нужно собрать?\"\n                        onChange={(e) => {\n                            this.setState({sum: e.target.value});\n                        }}\n                    />\n\n                    <Input\n                        type=\"purpose\"\n                        top=\"Цель\"\n                        placeholder=\"Например, лечение человека\"\n                        onChange={(e) => {\n                            this.setState({target: e.target.value});\n                        }}\n                    />\n\n                    <Textarea\n                        top=\"Описание\"\n                        placeholder=\"На что пойдут деньги и как они кому-то помогут?\"\n                        onChange={(e) => {\n                            this.setState({description: e.target.value});\n                        }}\n                    />\n\n                    <Select\n                        top=\"Куда получать деньги\"\n                    >\n                        <option value=\"0\">Счет VK Pay * 1234</option>\n                        <option value=\"1\">Карта * 1337</option>\n                    </Select>\n\n                    <Select top=\"Автор\">\n                        <option value=\"m\">{fetchedUser.first_name} {fetchedUser.last_name}</option>\n                        <option value=\"f\">Мое любимое сообщество</option>\n                    </Select>\n\n                    <Button\n                        size=\"xl\"\n                        disabled={this.state.name === ''\n                        || this.state.target === ''\n                        || this.state.sum === ''\n                        || this.state.description === ''}\n                        onClick={e => {\n                            donation.name = this.state.name;\n                            donation.target = this.state.target;\n                            donation.description = this.state.description;\n                            donation.sum = this.state.sum;\n                            setDonation(donation);\n                            go(e);\n                        }} data-to=\"preview\"\n                    >\n                        Далее\n                    </Button>\n                </FormLayout>\n            </Panel>\n        );\n    }\n}\n\nRegularDonation.propTypes = {\n    id: PropTypes.string.isRequired,\n    go: PropTypes.func.isRequired,\n    back: PropTypes.string,\n    fetchedUser: PropTypes.shape({\n        photo_200: PropTypes.string,\n        first_name: PropTypes.string,\n        last_name: PropTypes.string,\n        city: PropTypes.shape({\n            title: PropTypes.string,\n        }),\n    }),\n};\n\nexport default RegularDonation;\n","import React, {useState, useEffect} from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Additional from \"./panels/Additional\";\nimport TargetDonation from \"./panels/TargetDonation\";\nimport CollectionType from \"./panels/CollectionType\";\nimport Preview from \"./panels/Preview\";\nimport RegularDonation from \"./panels/RegularDonation\";\n\nconst App = () => {\n    const [activePanel, setActivePanel] = useState('home');\n    const [fetchedUser, setUser] = useState(null);\n    const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\n    const [donation, setDonation] = useState({\n        name: '',\n        description: '',\n        sum: '',\n        target: ''\n    });\n\n    useEffect(() => {\n        bridge.subscribe(({detail: {type, data}}) => {\n            if (type === 'VKWebAppUpdateConfig') {\n                const schemeAttribute = document.createAttribute('scheme');\n                schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n                document.body.attributes.setNamedItem(schemeAttribute);\n            }\n        });\n\n        async function fetchData() {\n            const user = await bridge.send('VKWebAppGetUserInfo');\n            setUser(user);\n            setPopout(null);\n        }\n\n        fetchData();\n    }, []);\n\n    const go = e => {\n        setActivePanel(e.currentTarget.dataset.to);\n    };\n\n    return (\n        <View activePanel={activePanel} popout={popout}>\n            <Home id='home' fetchedUser={fetchedUser} go={go}/>\n            <Additional id='additional' go={go} fetchedUser={fetchedUser} donation={donation}/>\n            <CollectionType id='ctype' go={go} fetchedUser={fetchedUser}/>\n            <TargetDonation id=\"targetDonation\" go={go} fetchedUser={fetchedUser} donation={donation}\n                            setDonation={setDonation}/>\n            <RegularDonation id='regularDonation' go={go} fetchedUser={fetchedUser} donation={donation}\n                             setDonation={setDonation}/>\n            <Preview id={\"preview\"} go={go} fetchedUser={fetchedUser} donation={donation} back={\"additional\"}/>\n        </View>\n    );\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}